#!/usr/bin/env python

import sys, itertools

def keyval(input):
    for line in input:
        m = []
        k,v = line.split('\t',1)
        for vv in v.split():
            m.append(int(vv))
        yield k,len(m),m

def reducer(input):
    for keylen, records in itertools.groupby(keyval(input), lambda x: (x[0],x[1])):
        key, sz = keylen
        moments = []
        rmoment = [0,0,0]
        #print >> sys.stderr, "sz=%s" % sz
        for x in xrange(0,sz):
            #print >> sys.stderr, "x=%s" % x
            moments.append([0,0,0])
        
        for sameaskey,sameassz,m in records:
            x = 0
            rl = 0
            for v in m:
                moments[x][0] += 1
                moments[x][1] += v
                moments[x][2] += v*v
                rl += v
                x += 1
            rmoment[0] += 1
            rmoment[1] += rl
            rmoment[2] += rl * rl
        yield key, moments, rmoment

if __name__ == "__main__":
    for key, dists, rldist in reducer(sys.stdin):
        if rldist[1] == 0:
            print key + "\t norldist=0"
        else:
            vlstr = 'vldist={{{(' + ') ('.join(','.join(str(p) for p in dist) for dist in dists) + ")}}}"
            rlstr = 'rldist={{{(' + ','.join(str(p) for p in rldist) + ')}}}'
            print key  + '\t' +  vlstr + ' ' + rlstr

