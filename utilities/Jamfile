import sbmt-util ;
import feature ;
import numbers ;
import project ;
import option ;
project utilities ;

rule max ( a1 a2 )
{
   if [ numbers.less $(a1) $(a2) ] { return $(a2) ; }
   else { return $(a1) ; }
}

alias boost_iostreams : /boost/iostreams ;
alias boost_program_options : /boost/program_options ;
alias boost_filesystem : /boost/filesystem ;
alias boost_regex : /boost/regex ;
alias boost_thread : /boost/thread ;
alias boost_signals : /boost/signals ;
#alias boost_serialization : /boost/serialization ;
alias pthread : /world//pthread ;
alias sbmt : /sbmt_decoder//sbmt ;
alias graehl : /graehl//graehl ;
alias RuleReader : /RuleReader//RuleReader ;
alias gusc : /gusc//gusc ;
alias xrsparse : /xrsparse ;

local script-pattern = *.pl *.sh *.py *.pm *.jar ;
local scripts = [ glob $(script-pattern) ] ;
 
local allocator = [ option.get allocator : off ] ;
feature.feature allocator : off hoard tbb : optional composite ;
feature.compose <allocator>hoard : <library>/site-config//hoard ;
feature.compose <allocator>tbb : <library>/tbb_alloc//tbb_alloc ;
feature.compose <allocator>off : ;

requires = <library>sbmt
           <library>boost_filesystem
           <library>gusc
           <include>.
         ;

lib grammar_args
  : grammar_args.cpp
  : $(requires)
  :
  : # $(requires)
  ;


lib lattice_tree_construct
  : lattice_tree_construct.cpp
  : $(requires)
  :
  : # $(requires)
  ;

lib decode_sequence_reader
  : decode_sequence_reader.cpp
  : $(requires)
  :
  : $(requires)
  ;

lib numproc : numproc.cpp ;

common = grammar_args
         lattice_tree_construct
         decode_sequence_reader
         numproc
         gusc
       ;

exe echo_rules : echo_rules.cpp sbmt ;

exe numcpu : numproc numcpu.cpp ;

sbmt-util.install install-lvl
  :
  : ./apps/cn_to_lattice//cn_to_lattice
    ./apps/filter_bad_rules//filter_bad_rules
    ./apps/prepend_start_words//prepend_start_words
    ./apps/validate_lattice//validate_lattice
    ./apps/view_runtime_infos//view_runtime_infos
    ./apps/xrs_vocab//xrs_vocab
    ./apps/lattice_words//lattice_words
    numcpu
    echo_rules
  :
  :
  : $(scripts)
  ;


alias install
    : install-lvl
      splitnt//install
      gluetopmaroon//install
      target_word_features//install
      decompose_dlm_events//install
      unknowns//install
    ;

