#!/usr/bin/env pypy
from graehl import *
from collections import defaultdict

def main(rest_=['-'],keyfields=1,sep='\t',npad=0,allow_over_npad=True,padval='',sort=True,header=False):
    t=ListDict()
    keys=[]
    i=0
    ncol=[0 for _ in rest_]
    for i,f in ival(rest_):
        for l in open_in(f):
            l=l.rstrip()
            f=l.split(sep,keyfields)
            k=tuple(f[:keyfields])
            if k not in t: keys.append(k)
            v=f[keyfields:]
            maxeq(ncol,i,len(v))
            at_expand(t[k],i,v,[])
            #v=pad(v,npad,padval,npad==0)
            #t[k]+=v
        i+=1
    if sort:
        keys=sorted(keys)
        for i in indices[ncols]:
            ncols[k]=max(ncols[k],npad) if allow_over_npad else npad
    for k in keys:
        print sep.join(list(k)+flatlist(pad(l,ncol[i],pad=padval) for (i,l) in ival(t[k])))

import optfunc
optfunc.main(main)
