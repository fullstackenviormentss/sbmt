#!/usr/bin/env python

import cfg, argparse, os, sys, pickle
parser=argparse.ArgumentParser()

parser.add_argument('ext')
d = cfg.parse_args(parser)
hp = d.hadoop

bindir = d.config['variables']['rhbin']
tdir=os.path.join(d.scriptdir,'taglex')
ext = d.ext
data = 'data.weightlexmorph.' + ext
flag=''
if ext == 'inv':
    flag=' -i'

auxmap = pickle.load(open(d.tmpdir + "/training.aux.map"))


if not hp.file_exists('training'):
    hp.put(os.path.join(d.tmpdir,'training'),'training')

hp.mapreduce( input='training'
            , output=data
            , mapper=os.path.join(d.config['variables']['rhbin'],'mkdata') + ' ' + str(auxmap['weighted-count'])
            )
hp.mapreduce( input=data
            , output=data+'.estem'
            , mapper=os.path.join(d.scriptdir,'mkdatastem')
            )
hp.mapreduce( input=data+'.estem'
            , output=data+'.f2estem'
            , mapper=os.path.join(bindir,'fields') + " 0 2 3 4"
            )
hp.mapreduce( input=data+'.estem'
            , output=data+'.estem2e'
            , mapper=os.path.join(bindir,'fields') + " 2 1 4"
            )
hp.remove(data)
hp.mapreduce( input=data+'.f2estem'
            , mapper=os.path.join(d.config['variables']['rhbin'],'count_align_weighted') + flag
            , reducer=os.path.join(d.config['variables']['rhbin'],'divide')
            , output=ext+'.wmlex.f2estem.star'
            ) 
hp.mapreduce( input=ext+'.wmlex.f2estem.star'
            , mapper=os.path.join(bindir,'fields') + r" -d ' \t' 1 2 3"
            , output=ext+'.wmlex.f2estem'
            )
hp.mapreduce( input=data+'.estem2e'
            , mapper=os.path.join(d.config['variables']['rhbin'],'count_align_trivial_weighted') + flag
            , reducer=os.path.join(d.config['variables']['rhbin'],'divide')
            , output=ext+'.wmlex.estem2e'
            )

if ext == 'inv':
    hp.mapreduce( input=ext+'.wmlex.estem2e'
                , output=ext+'.wmlex.estem2e.inverted'
                , mapper=os.path.join(bindir,'fields') + r" -d ' \t' 1 0 2"
                )
    cfg.execute( d
               , '$join $ext.wmlex.f2estem $ext.wmlex.estem2e.inverted -c $config -o $ext.wmlex.f2e.unsummed'
               , join=os.path.join(d.scriptdir,'join')
               , config=d.config_files
               , ext=d.ext
               )
    hp.mapreduce( input=ext+'.wmlex.f2e.unsummed'
                , mapper=os.path.join(bindir,'fields') + " 3 1 4 2"
                , sortkeys=2
                , reducer=os.path.join(d.scriptdir,'compose_table')
                , output=ext+'.wmlex.final' )
    hp.remove(ext+'.wmlex.f2estem')
    hp.remove(ext+'.wmlex.estem2e')
    hp.remove(ext+'.wmlex.estem2e.inverted')
else:
    hp.mapreduce( input=ext+'.wmlex.f2estem'
                , output=ext+'.wmlex.f2estem.inverted'
                , mapper=os.path.join(bindir,'fields') + r" -d ' \t' 1 0 2"
                )
    cfg.execute( d
               , '$join $ext.wmlex.f2estem.inverted $ext.wmlex.estem2e -c $config -o $ext.wmlex.f2e.unsummed'
               , join=os.path.join(d.scriptdir,'join')
               , config=d.config_files 
               , ext=d.ext
               )
    hp.mapreduce( input=ext+'.wmlex.f2e.unsummed'
                , mapper=os.path.join(bindir,'fields') + " 1 3 2 4"
                , sortkeys=2
                , reducer=os.path.join(d.scriptdir,'compose_table')
                , output=ext+'.wmlex.final'
                )
    hp.remove(ext+'.wmlex.f2estem')
    hp.remove(ext+'.wmlex.f2estem.inverted')
    hp.remove(ext+'.wmlex.estem2e')
hp.remove(ext+'.wmlex.f2e.unsummed')

hp.mapreduce( input=ext+'.wmlex.final' 
            , output=ext+'.wmlex.final.flat' 
            , mapper=os.path.join(tdir,'rotate')
            , reducer=os.path.join(tdir,'flatten')
            , sortkeys=2
            )

hp.remove(ext+'.wmlex.final')
hp.mapreduce( input='rules.alignments'
            , mapper=os.path.join(tdir,'wordpairs') + flag
            , output=ext+'.wmlex.wordpairs'
            )

cfg.execute(d,'$join $ext.wmlex.wordpairs $ext.wmlex.final.flat -c $config -e -E -k 3 -o $ext.wmlex.join',ext=d.ext,config=d.config_files,join=os.path.join(d.scriptdir,'join'))

hp.mapreduce( input=ext+'.wmlex.join'
            , output='part.weightmorphlex.' + ext
            , mapper=os.path.join(tdir,'idfirst')
            , reducer=os.path.join(tdir,'score')+' -w 4 weightmorphlex.' + ext
            )
hp.remove(ext+'.wmlex.join')

