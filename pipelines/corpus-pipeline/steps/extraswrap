#!/usr/bin/env python

import argparse
import os.path
import cfg
import sys
import subprocess

def repack(lst):
    return ' '.join('"%s"' % escaped for escaped in (s.replace('\\','\\\\').replace('"',r'\"') for s in lst))

cmdline = []
mapper = []
formapper = False
for tok in sys.argv:
    if tok == '--' and not formapper:
        formapper = True
        continue
    if formapper and tok != '--':
        mapper.append(tok)
    elif tok != '--':
        cmdline.append(tok)

#print >> sys.stderr, cmdline
#print >> sys.stderr, mapper

parser = argparse.ArgumentParser()
parser.add_argument('name')
parser.add_argument('-M',dest='mapper',action='store_true')
args = cfg.parse_args(parser,cmdline[1:])
hp = args.hadoop

def mapinput(cmd):
    for line in sys.stdin:
        id,sent,_ = line.rstrip('\n').split('\t')
        proc = subprocess.Popen( cmd
                               , stdin=subprocess.PIPE
                               , stdout=subprocess.PIPE
                               )
        #print >> proc.stdin, sent
        rules,_ = proc.communicate(sent)
        for rule in rules.strip('\n').split('\n'):
            print '%s\t%s' % (id,rule)

if args.mapper:
    mapinput(mapper)
else:
    lines = 0
    for line in open(args.config['corpus']):
        lines += 1

    mapper = cmdline + ['-M','--'] + mapper
    
    mapstr = repack(mapper)
    hp.mapreduce( mapper=mapstr
                , input='input'
                , output='part.%s' % args.name 
                , options='-jobconf mapred.map.tasks='+str(int(lines/500)) )
