#!/usr/bin/env python

import sys, itertools, re, collections
from decimal import *

kvsre=re.compile('(.*)={{{(.*)}}}')

# requires mapreduce be specified to use two keys for sorting, 1 for partitioning

def keyval(input):
    for line in input:
        args = line.strip().split('\t')
        k = args[0]
        w = args[2]
        m = kvsre.match(args[1])
        v = ['%s-%s' % (m.group(1),s) for s in m.group(2).split()]
        yield k.strip(),v,Decimal(w.split()[0])

def reducer(pairs):
    for rule, rec in itertools.groupby(pairs, lambda x : x[0]):
        coll = collections.defaultdict(Decimal)
        total = Decimal(0)
        for ignore,vset, wt in rec:
            total += wt
            for v in vset:
                coll[v] += wt
        
        yield rule,' '.join('%s=%s' % (k,v/total) for (k,v) in coll.iteritems())

if __name__ == '__main__':
    for rule, val in reducer(keyval(sys.stdin)):
        print "%s\t%s" % (rule,val)

 
